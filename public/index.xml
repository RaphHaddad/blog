<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raph&#39;s Blog</title>
    <link>http://example.org/</link>
    <description>Recent content on Raph&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Nov 2018 12:13:00 +1100</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Healthy Backlogs</title>
      <link>http://example.org/posts/healthy-backlogs/</link>
      <pubDate>Sat, 03 Nov 2018 12:13:00 +1100</pubDate>
      
      <guid>http://example.org/posts/healthy-backlogs/</guid>
      <description>When I look at a healthy backlog, I feel that I&amp;rsquo;m going to achieve something, there&amp;rsquo;s often a sense of security within the team, and a healthy backlog generally means there&amp;rsquo;s little unplanned work being thrown towards the team. Feelings are important to the team and its members, and a healthy backlog can help with mood and emotions. In this post, I want to explain to you what I think the specifics are when I think of a healthy backlog, which, may help with mood but will certainly help with delivery.</description>
    </item>
    
    <item>
      <title>Quality and Pragmatism </title>
      <link>http://example.org/posts/quality-and-pragmatism/</link>
      <pubDate>Thu, 27 Sep 2018 17:10:00 +1000</pubDate>
      
      <guid>http://example.org/posts/quality-and-pragmatism/</guid>
      <description>Pragmatism and quality are two things that are often pitted against each other when delivering software. When I think of pragmatism, I think what things can be avoided in order to deliver software to our customer sooner. When I think quality, I think a whole range of things including: maintainability, scalability, and interoperability of a system to name a few. It may also mean things that may not directly relate to the system for example: documentation, support, and user customisation.</description>
    </item>
    
    <item>
      <title>Do you know what I mean?</title>
      <link>http://example.org/posts/do-you-know-what-i-mean/</link>
      <pubDate>Mon, 03 Sep 2018 13:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/do-you-know-what-i-mean/</guid>
      <description>I&amp;rsquo;ve written previously about some language that I&amp;rsquo;m actively trying to change in my day-to-day dealings with people, I write these blog posts because they hold me public accountable to my peers, friends, and family. My previous posts were:
It Depends
I Don&amp;rsquo;t Know

Shrugging. Source: Wikimedia Commons
Today, I want to highlight some of the other phrases I&amp;rsquo;ll be trying to actively avoid in my dad-to-day speech. These are:</description>
    </item>
    
    <item>
      <title>Reboot DevOps (Part: III)</title>
      <link>http://example.org/posts/reboot-devops-part-iii/</link>
      <pubDate>Tue, 14 Aug 2018 17:47:00 +1000</pubDate>
      
      <guid>http://example.org/posts/reboot-devops-part-iii/</guid>
      <description>As alluded to in Part 1 and II it seems that DevOps has just become about CI/CD pipelines, provisioning infrastructure, and deploying applications. Today, we&amp;rsquo;ll speak about CI/CD pipelines but more specifically the purpose they seek to provide.
Firstly, I think the term CI/CD is counter-intuitive. It&amp;rsquo;s not a descriptive term and I would prefer to use the far more boring term release pipeline because it is self descriptive. Our primary concern is how does candidate code get from a local developer&amp;rsquo;s machine all the way into production.</description>
    </item>
    
    <item>
      <title>Reboot DevOps (Part: II)</title>
      <link>http://example.org/posts/reboot-devops-part-ii/</link>
      <pubDate>Tue, 07 Aug 2018 13:52:00 +1000</pubDate>
      
      <guid>http://example.org/posts/reboot-devops-part-ii/</guid>
      <description>In the Part I we discussed how DevOps isn&amp;rsquo;t about solving application problems using infrastructure but about being able to deploy to our targets in a sustainable way. We spoke about how increasing confidence enables personnel to release more often as risks are hedged by having solid application packages.

Magnifying glass source: Wikimedia commons
Today we will speak about how monitoring and observability can increase our confidence to enable us to release more often.</description>
    </item>
    
    <item>
      <title>Reboot DevOps</title>
      <link>http://example.org/posts/reboot-devops/</link>
      <pubDate>Tue, 24 Jul 2018 09:54:00 +1000</pubDate>
      
      <guid>http://example.org/posts/reboot-devops/</guid>
      <description>In an ideal scenario a large organisation would have DevOps capabilities spread across their various teams. There would be no need to lean on an operations team to do any deployment, scaling, or observing of applications. Engineers would understand the inside and outside of infrastructure, security, logging, and message brokering.
The world isn&amp;rsquo;t ideal though, that&amp;rsquo;s not an excuse not to strive for the ideal.

Fixing problems in the wrong way.</description>
    </item>
    
    <item>
      <title>Standing in a Circle Clapping is Not Agile</title>
      <link>http://example.org/posts/standing-in-circle-clapping-is-not-agile/</link>
      <pubDate>Fri, 20 Jul 2018 16:11:00 +1000</pubDate>
      
      <guid>http://example.org/posts/standing-in-circle-clapping-is-not-agile/</guid>
      <description>For many organisations going through an agile or digital transformation, there seems to be a culture of standing around clapping. When this behaviour is regular and habitual for every little achievement, I become sceptical of its value.
Today, I would like to explain to you my scepticism.
Firstly, I think that many organisations that are going through a transformation stand in a circle and clap because they hadn&amp;rsquo;t recognised achievements properly in the past.</description>
    </item>
    
    <item>
      <title>It depends</title>
      <link>http://example.org/posts/it-depends/</link>
      <pubDate>Mon, 02 Jul 2018 12:33:00 +1000</pubDate>
      
      <guid>http://example.org/posts/it-depends/</guid>
      <description>A few months ago I wrote a post I Don’t Know. It was a post that explained why being honest about things you don’t know is important, as it builds trust amongst team members. I also explained why saying you don’t know something and following it up with a desire to actually take action, in order to gain that knowledge, is important. Today, I will talk about the words “it depends”.</description>
    </item>
    
    <item>
      <title>Stop Demonising Process</title>
      <link>http://example.org/posts/stop-demonising-process/</link>
      <pubDate>Tue, 19 Jun 2018 08:42:00 +1000</pubDate>
      
      <guid>http://example.org/posts/stop-demonising-process/</guid>
      <description>All too often people appeal to being &amp;ldquo;Agile&amp;rdquo; as a way to avoid following or having process. It could be because the term &amp;ldquo;Agile&amp;rdquo; implies flexibility or even because the Agile Manifesto itself says explicitly that &amp;ldquo;Individuals and interactions over processes and tools&amp;rdquo;. Here, the manifesto doesn&amp;rsquo;t say that being &amp;ldquo;Agile&amp;rdquo; doesn&amp;rsquo;t mean you don&amp;rsquo;t have process, it simply says you favour individuals over process. The demonisation of process could also be a knee jerk reaction of when teams had process imposed on them.</description>
    </item>
    
    <item>
      <title>How rock climbing, cooking, and weight lifting help us relate to software delivery.</title>
      <link>http://example.org/posts/how-rock-climbing-cooking-and-weight/</link>
      <pubDate>Mon, 04 Jun 2018 22:15:00 +1000</pubDate>
      
      <guid>http://example.org/posts/how-rock-climbing-cooking-and-weight/</guid>
      <description>Incremental, iterative, sprints. Whatever word you may use, the whole point is, as the agile manifesto says to Deliver working software frequently. The key here is working not necessarily perfect_. _Using the words just mentioned or even the word _agile_ can cause some confusion. One of the most common aspects of confusion for people not wanting to deliver incrementally and pushing a large amount of changes into a future release is Aren&amp;rsquo;t we agile, let&amp;rsquo;s be flexible.</description>
    </item>
    
    <item>
      <title>People or Resources? Let&#39;s Be Honest With Ourselves</title>
      <link>http://example.org/posts/people-or-resources-lets-be-honest-with/</link>
      <pubDate>Wed, 23 May 2018 21:11:00 +1000</pubDate>
      
      <guid>http://example.org/posts/people-or-resources-lets-be-honest-with/</guid>
      <description>I&amp;rsquo;ve never liked it when people get referred to as resources. Especially when it&amp;rsquo;s thrown around in front of the people themselves. Chairs, tables, capital, and computing power. These are resources, not people.
Nevertheless, a change of language is a good place to start.
A danger exists in any organisation where people may be abstracted away from their leaders, in these scenarios, it&amp;rsquo;s easy to see people as resources or see people as a composition of their attributes be they: technology strengths, experience, height, weight and/or salary band.</description>
    </item>
    
    <item>
      <title>Scaling Agile with GRC (Governance, Risk, and Compliance)</title>
      <link>http://example.org/posts/scaling-agile-with-grc-governance-risk/</link>
      <pubDate>Thu, 10 May 2018 10:11:00 +1000</pubDate>
      
      <guid>http://example.org/posts/scaling-agile-with-grc-governance-risk/</guid>
      <description>In the 21st Century, software is at the forefront of our lives. Our insurance, money, communication is all done via software. As such, the importance of GRC is becoming ever more apparent as more and more sensitive information is being stored and viewed by a range of people. We as software practitioners have the responsibility to ensure we store data securely, encrypt communication, output data in a legal and compliant format, and make everything accessible to the general public.</description>
    </item>
    
    <item>
      <title>Book Review: Leading by Alex Ferguson</title>
      <link>http://example.org/posts/book-review-leading-by-alex-ferguson/</link>
      <pubDate>Sat, 05 May 2018 17:07:00 +1000</pubDate>
      
      <guid>http://example.org/posts/book-review-leading-by-alex-ferguson/</guid>
      <description>Alex Ferguson was Manchester United FC&amp;rsquo;s manager for 27 years. During this time he managed the club to multiple titles while leading some of the most hard working, talented, and high performant players on the planet. I thought I&amp;rsquo;d give this book a shot to see what I can get out of it in my everyday life. Whether you like Alex (Or Manchester United FC) or not. It is clear that Alex was successful in his tenure at United and Aberdeen.</description>
    </item>
    
    <item>
      <title>Commerce, coffee, and value</title>
      <link>http://example.org/posts/commerce-coffee-and-value/</link>
      <pubDate>Mon, 16 Apr 2018 13:23:00 +1000</pubDate>
      
      <guid>http://example.org/posts/commerce-coffee-and-value/</guid>
      <description>According to Wikipedia, commerce is the exchange of goods and services that existed as part of the human story since prehistoric times. Before currency we used to barter, then we began to use currency backed by resources like gold, and now we use fiat money (currency backed by the issuing government).
As humans we&amp;rsquo;ve learnt that this is the way we exchange value. When I go to a particular coffee shop on a Saturday it&amp;rsquo;s because I judge that the value in the coffee given to me is better than the shop next door.</description>
    </item>
    
    <item>
      <title>Tips to Automate Yourself Out of a Job</title>
      <link>http://example.org/posts/tips-to-automate-yourself-out-of-job/</link>
      <pubDate>Thu, 05 Apr 2018 07:33:00 +1000</pubDate>
      
      <guid>http://example.org/posts/tips-to-automate-yourself-out-of-job/</guid>
      <description>Providing tools, processes, and platforms that automate everything, including yourself out of a job should be the goal of everyone in IT. It&amp;rsquo;s something people rant about on Twitter, speak about on YouTube, and attempt to inspire on LinkedIn. Everyone seems to be telling us we _should_ automate our jobs, not many are telling us how. Today I have a few practical things you can do to actualise this goal.</description>
    </item>
    
    <item>
      <title>Book Review: How We Got to Now by Steve Johnson</title>
      <link>http://example.org/posts/book-review-how-we-got-to-now-by-steve/</link>
      <pubDate>Tue, 27 Mar 2018 20:14:00 +1100</pubDate>
      
      <guid>http://example.org/posts/book-review-how-we-got-to-now-by-steve/</guid>
      <description>How We Got to Now is a book that I can&amp;rsquo;t really put into any individual genre. It isn&amp;rsquo;t a novel, isn&amp;rsquo;t a collection of small stories, isn&amp;rsquo;t purely educational, and isn&amp;rsquo;t historical. It is a combination of all of these genres and that&amp;rsquo;s what makes this book unique and enjoyable.
The book How We Got to Now describes, as suggested by its subtitle, &amp;ldquo;Six Innovations That Made the Modern World&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Build and Release Pipeline for Your Own Custom VSTS Tasks</title>
      <link>http://example.org/posts/build-and-release-pipeline-for-your-own-comments/</link>
      <pubDate>Tue, 27 Mar 2018 16:14:00 +1100</pubDate>
      
      <guid>http://example.org/posts/build-and-release-pipeline-for-your-own-comments/</guid>
      <description>Best post Michele H. Elam - Oct 1, 2018
Best post Once in a while, the Hosted Agents won&amp;rsquo;t have &amp;hellip; Maria R. Brown - Oct 1, 2018
Once in a while, the Hosted Agents won&amp;rsquo;t have the product you need, or you may need an especially husky form have. VSTS additionally gives you a chance to bring your own operator, where you can do whatever you need. This is awesome, however now you have to look after (read: pay for) a VM that is prepared to acknowledge employments.</description>
    </item>
    
    <item>
      <title>Build and Release Pipeline for Your Own Custom VSTS Tasks</title>
      <link>http://example.org/posts/build-and-release-pipeline-for-your-own/</link>
      <pubDate>Tue, 27 Mar 2018 16:14:00 +1100</pubDate>
      
      <guid>http://example.org/posts/build-and-release-pipeline-for-your-own/</guid>
      <description>Anyone can create their own custom VSTS tasks and put them on the VSTS marketplace. There are tons of these custom tasks and they can be published publicly into the marketplace or privately into your own instance of VSTS. This blog post will demonstrate how to setup a build and release pipeline for these custom tasks (using custom VSTS tasks!).
There are many reasons to create your own tasks on an instance of VSTS.</description>
    </item>
    
    <item>
      <title>Using SBAR in code reviews</title>
      <link>http://example.org/posts/using-sbar-in-code-reviews/</link>
      <pubDate>Thu, 22 Mar 2018 08:49:00 +1100</pubDate>
      
      <guid>http://example.org/posts/using-sbar-in-code-reviews/</guid>
      <description>After the end of a messy sprint everyone was excited and scared to attend the sprint retro. The topic we were dreading the most came up - pull requests. It had been a sprint where few pull requests went through smoothly and everyone was picking up issues with every pull request. Stylistic things came up, whole features needed to be redeveloped, people were clearly annoyed, and you could sense the tension in the room.</description>
    </item>
    
    <item>
      <title>Transformation, reorganisation, and continuous improvement</title>
      <link>http://example.org/posts/transformation-reorganisation-and/</link>
      <pubDate>Sat, 10 Mar 2018 16:08:00 +1100</pubDate>
      
      <guid>http://example.org/posts/transformation-reorganisation-and/</guid>
      <description>It seems that almost everywhere I look, a big corporate is going through a &amp;lsquo;transformation&amp;rsquo; or &amp;lsquo;reorganisation&amp;rsquo;. Clearly someone within these organisation is making the decision that this is required because of problems occurring with existing software delivery practices. That is, they want something improved.
Throughout 2016, I lost more than 20kgs of weight. I did this very slowly through dieting and returning back to my previous exercising habits. I&amp;rsquo;ve maintained this weight throughout 2017 and now.</description>
    </item>
    
    <item>
      <title>Book Review of &#39;TED TALKS&#39; and what I learnt</title>
      <link>http://example.org/posts/book-review-of-ted-talks-and-what-i-comments/</link>
      <pubDate>Fri, 02 Mar 2018 09:07:00 +1100</pubDate>
      
      <guid>http://example.org/posts/book-review-of-ted-talks-and-what-i-comments/</guid>
      <description> Nice review Raph. That colleague you mentioned, Pa&amp;hellip; Glav - Mar 5, 2018
Nice review Raph. That colleague you mentioned, Paul, he sounds like an awesome person :-) </description>
    </item>
    
    <item>
      <title>Book Review of &#39;TED TALKS&#39; and what I learnt</title>
      <link>http://example.org/posts/book-review-of-ted-talks-and-what-i/</link>
      <pubDate>Fri, 02 Mar 2018 09:07:00 +1100</pubDate>
      
      <guid>http://example.org/posts/book-review-of-ted-talks-and-what-i/</guid>
      <description>For those of us wanting to improve our public speaking, have been speaking for a while, or just starting out. This is a great book which was lent to me by my colleague Paul. Below is my review which covers &amp;lsquo;how I read it&amp;rsquo;, &amp;lsquo;what were the main points&amp;rsquo;, and &amp;lsquo;what was missing&amp;rsquo;.

Taken with my smart phone
For me, public speaking has always been about sharing knowledge. The difficulty is how do we share this knowledge in a way that is exciting, so that the audience is able to have the same interest in this knowledge that I am.</description>
    </item>
    
    <item>
      <title>&#39;Hierarchy&#39; the dirty word</title>
      <link>http://example.org/posts/hierarchy-dirty-word-comments/</link>
      <pubDate>Wed, 21 Feb 2018 22:49:00 +1100</pubDate>
      
      <guid>http://example.org/posts/hierarchy-dirty-word-comments/</guid>
      <description> Well said! To me hierarchy is about responsibility&amp;hellip; Emad Alashi - Feb 5, 2018
Well said! To me hierarchy is about responsibility, what makes it dirty is the privilege, false prestige, and unbalanced benefits that is usually associated with it, wrongfully. Control that, and you get yourself a healthy hierarchy. </description>
    </item>
    
    <item>
      <title>&#39;Hierarchy&#39; the dirty word</title>
      <link>http://example.org/posts/hierarchy-dirty-word/</link>
      <pubDate>Wed, 21 Feb 2018 22:49:00 +1100</pubDate>
      
      <guid>http://example.org/posts/hierarchy-dirty-word/</guid>
      <description>Modern human resource departments dread the word &amp;ldquo;hierarchy&amp;rdquo;, companies happily boast of their &amp;ldquo;flat structure&amp;rdquo; in job advertisements, and national leaders are disparaged as being out of touch. However, when is a bit of hierarchy actually good? When is it worth it?
My personal issue isn&amp;rsquo;t with hierarchy. It&amp;rsquo;s with excess, unneeded hierarchy. Hierarchy can be good as it means the higher up the individual goes, the more responsibility they have.</description>
    </item>
    
    <item>
      <title>Make your code review requests count</title>
      <link>http://example.org/posts/make-your-code-reviews-count/</link>
      <pubDate>Fri, 16 Feb 2018 17:24:00 +1100</pubDate>
      
      <guid>http://example.org/posts/make-your-code-reviews-count/</guid>
      <description>The value in PRs (or code reviews in general) is more than just ensuring good code is pushed into the main-line branch. There&amp;rsquo;s more to a PR in my opinion. This includes
• Learning from others
• Sharing learning, understanding, and the architecture of your system

Someone doing a cod review. Source: WikiMedia Commons
Have you ever received a code review request where someone has ran a tool over the file and changed formatting, spacing, or convention?</description>
    </item>
    
    <item>
      <title>3, 2, 1 - REVEAL POINTS. The true value of poker sizing</title>
      <link>http://example.org/posts/3-2-1-reveal-points-true-value-of-poker/</link>
      <pubDate>Thu, 08 Feb 2018 09:00:00 +1100</pubDate>
      
      <guid>http://example.org/posts/3-2-1-reveal-points-true-value-of-poker/</guid>
      <description>Many of us are in teams with a good habit of sizing work items, and in many cases this is a good habit. However, do we truly understand the importance of this behaviour? Why do we do it? Is it even necessary, and where is the real value of all this?

A Royal Flush, the highest possible hand in poker: Source Wikimedia Commons
Points poker sizing is very common. The team calculate velocity and use this velocity to forecast their work for their next work iteration.</description>
    </item>
    
    <item>
      <title>My top 3 development tools</title>
      <link>http://example.org/posts/my-top-3-development-tools/</link>
      <pubDate>Thu, 01 Feb 2018 15:54:00 +1100</pubDate>
      
      <guid>http://example.org/posts/my-top-3-development-tools/</guid>
      <description>Every developer has a set of development tools which they use on a regular basis. Below is a list of my top three tools, why I use them, and how they benefit me. In the list below I haven&amp;rsquo;t included code editors, IDEs, or extensions to IDEs. Please note: this may disappoint many of you who are expecting something &amp;ldquo;advanced&amp;rdquo; or &amp;ldquo;funky&amp;rdquo;.

Some tools. Source: Wikimedia Commons
posh-git Git has become the VCS of choice these days, and I have previously advocated that those who use git should primarily use it from the command line.</description>
    </item>
    
    <item>
      <title>Git breaking? Get off the UI</title>
      <link>http://example.org/posts/git-breaking-get-off-ui/</link>
      <pubDate>Mon, 08 Jan 2018 09:24:00 +1100</pubDate>
      
      <guid>http://example.org/posts/git-breaking-get-off-ui/</guid>
      <description>Git is perhaps the best VCS I&amp;rsquo;ve used in my life. However, some of the things I always hear when people are trying to learn Git, or have used it for a while but never in larger teams are:
&amp;ldquo;something stuffed up my Git&amp;rdquo;
&amp;ldquo;my Git is broken&amp;rdquo;
In my experience, Git is probably the most predictable, deterministic tool I&amp;rsquo;ve ever used (thankfully, considering it does version your code!).
git logo.</description>
    </item>
    
    <item>
      <title>I Don&#39;t Know</title>
      <link>http://example.org/posts/i-dont-know/</link>
      <pubDate>Tue, 02 Jan 2018 17:05:00 +1100</pubDate>
      
      <guid>http://example.org/posts/i-dont-know/</guid>
      <description>Many people who come from command and control working environments have a very limited circle of safety. This maybe because their suggestions have been discarded rudely, being treated poorly, or always fearing for their job. They do not suggest improvements and are often too scared to ask for help.

source: Wiki Commons
[](https://www.blogger.com/null)When working in environments like this that are trying to change for the better. One of the things we can do is say &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Why unit testing is still very relevant</title>
      <link>http://example.org/posts/why-unit-testing-is-still-very-relevant/</link>
      <pubDate>Sat, 23 Dec 2017 12:01:00 +1100</pubDate>
      
      <guid>http://example.org/posts/why-unit-testing-is-still-very-relevant/</guid>
      <description>In this age of in-memory test servers and databases, multi tenancy-first design, and increased performance it&amp;rsquo;s easy to simply dismiss unit testing as a practice of the past. Whilst I myself have increased my dependance on integration testing in new applications that I write. Unit testing still has its place.

 A set of beer-units about to be tested | source: WikiMedia Commons *   [](https://www.blogger.com/null)
In 2017, I&amp;rsquo;ve gave a few talks about testing more and mocking less.</description>
    </item>
    
    <item>
      <title>Have You Ever Produced Negative Value in a System!?</title>
      <link>http://example.org/posts/have-you-ever-produced-negative-value-comments/</link>
      <pubDate>Fri, 24 Nov 2017 08:50:00 +1100</pubDate>
      
      <guid>http://example.org/posts/have-you-ever-produced-negative-value-comments/</guid>
      <description> Very good question: often there are powers above t&amp;hellip; Raphael Haddad - Nov 5, 2017
Very good question: often there are powers above the PO that are demanding certain features be implemented. This can be certain organisational policies or stakeholders. </description>
    </item>
    
    <item>
      <title>Have You Ever Produced Negative Value in a System!?</title>
      <link>http://example.org/posts/have-you-ever-produced-negative-value/</link>
      <pubDate>Fri, 24 Nov 2017 08:50:00 +1100</pubDate>
      
      <guid>http://example.org/posts/have-you-ever-produced-negative-value/</guid>
      <description>As developers we encourage our product owners to order the priority of their backlog in order of value. However, every time a new feature is implemented by a development team, there is a certain degree of risk associated with the introduction of that new code. Namely, risk of breaking another part of the product and maintenance cost. When a development team pulls in a new feature to implement there is a certain acceptance of this risk.</description>
    </item>
    
    <item>
      <title>from zero to production in eighty days</title>
      <link>http://example.org/posts/from-zero-to-production-in-eighty-days/</link>
      <pubDate>Sat, 04 Nov 2017 17:39:00 +1100</pubDate>
      
      <guid>http://example.org/posts/from-zero-to-production-in-eighty-days/</guid>
      <description>When I mean zero, I literally mean zero. A brand new project, a PO that&amp;rsquo;s new to IT, no existing processes in place and a small team of four including myself and the PO.
The departmental organisation we were working for doesn&amp;rsquo;t have any developers, scrum masters, product owners working for them. Everything they did was either done by another department or outsourced completely.
This is a story how we went from zero to production in eighty days.</description>
    </item>
    
    <item>
      <title>My first time speaking at a conference</title>
      <link>http://example.org/posts/my-first-time-speaking-at-conference/</link>
      <pubDate>Thu, 28 Sep 2017 09:19:00 +1000</pubDate>
      
      <guid>http://example.org/posts/my-first-time-speaking-at-conference/</guid>
      <description>Since time immemorial we humans have valued the art of public speaking. Today, I want to share with you my experiences in speaking at conferences for the first time. Recently, I spoke at both DDD Melbourne and DDD Perth. Both of which were positive experiences that I learnt a lot in.

source: Wikipedia
So you may have been speaking at MeetUps, internal company events and/or Toastmasters and feel it&amp;rsquo;s time to graduate to a full conference.</description>
    </item>
    
    <item>
      <title>Context and agile practices</title>
      <link>http://example.org/posts/context-and-agile-practices/</link>
      <pubDate>Fri, 15 Sep 2017 08:36:00 +1000</pubDate>
      
      <guid>http://example.org/posts/context-and-agile-practices/</guid>
      <description>At times we have competing responsibilities - ship code or don&amp;rsquo;t ship it because of a small edge case bug; put pressure on our team or make the business happy; coach our friends or write code.
This is a normal part of our everyday professional lives, and it&amp;rsquo;s important to strike a balance that will help us in the future, but also deliver in the short-term.
One of the hardest things to balance is when to modify our delivery practices to satisfy certain team members, when we know the changes have been harmful in past projects.</description>
    </item>
    
    <item>
      <title>leadership, maturity and authority</title>
      <link>http://example.org/posts/leadership-maturity-and-authority/</link>
      <pubDate>Mon, 10 Apr 2017 10:40:00 +1000</pubDate>
      
      <guid>http://example.org/posts/leadership-maturity-and-authority/</guid>
      <description>A recent question was asked in Readify&amp;rsquo;s internal Yammer along the lines of how technically strong does a team leader need to be to lead a technical team.
The conversation eventually diverted into a range of exclamations by very smart Readifarians on what leadership is in different scenarios.
Below is my opinion
To me, a leader in general is optimised by his/her ability to serve others. A servant-leader is essentially one who is able to jump into the heat of battle first and leave last, ensure that his/her family eats and are satisfied before eating or simply ensuring every other team member is able to work on the task at-hand prior to starting their own task.</description>
    </item>
    
    <item>
      <title>More than just a build/release pipeline</title>
      <link>http://example.org/posts/more-than-just-buildrelease-pipeline/</link>
      <pubDate>Fri, 19 Aug 2016 16:42:00 +1000</pubDate>
      
      <guid>http://example.org/posts/more-than-just-buildrelease-pipeline/</guid>
      <description>You&amp;rsquo;ve setup your build server, have continuous integration/delivery. Setup your release service, have continuous deployment. Your team are following proper branching strategy. Good yeah?
However&amp;hellip;
Code PRs are carelessly merged, builds are always broken and you&amp;rsquo;re 3 sprints behind.
What&amp;rsquo;s the problem?
An initial examination will show that your team are following all the rules. However, further examination will show that they aren&amp;rsquo;t being professional in other things. Many leads will simply suggest adding more rules.</description>
    </item>
    
    <item>
      <title>On premise CI/CD/CD with VSTFS2015 and IIS</title>
      <link>http://example.org/posts/on-premise-cicdcd-with-vstfs2015-and-iis/</link>
      <pubDate>Mon, 01 Aug 2016 17:30:00 +1000</pubDate>
      
      <guid>http://example.org/posts/on-premise-cicdcd-with-vstfs2015-and-iis/</guid>
      <description>Many clients I visit are still not on the cloud and are still not using VSTS (Visual Studio Team Services) online and Azure.
Meaning, they still have on premise infrastructure for their applications. Now, I don&amp;rsquo;t want this blog post to turn into a defence of cloud (more specifically PaaS). Rather, I want to quickly show you how you can setup a CI/CD/CD (Continuous Integration/Delivery/Deployment) delivery pipeline with an on-premise instance of VSTFS 2015 deploying to machines with IIS .</description>
    </item>
    
    <item>
      <title>WHY the same place and time for your daily stand-up?</title>
      <link>http://example.org/posts/why-same-place-and-time-for-your-daily/</link>
      <pubDate>Mon, 18 Jul 2016 20:20:00 +1000</pubDate>
      
      <guid>http://example.org/posts/why-same-place-and-time-for-your-daily/</guid>
      <description>&amp;ldquo;we&amp;rsquo;re all here, let&amp;rsquo;s just have stand-up now&amp;rdquo;
&amp;ldquo;so-and-so isn&amp;rsquo;t coming today, so let&amp;rsquo;s have stand-up now&amp;rdquo;
&amp;ldquo;hey, I&amp;rsquo;ll just come over there and we&amp;rsquo;ll do stand-up there&amp;rdquo;
It seems so easy and innocent to simply change the time and place of stand-ups, especially when key people such as the PO or Scrum master may not be attending the meeting for the day. The reasons I recommend for not changing are:</description>
    </item>
    
    <item>
      <title>Lessons from a greenish-field project</title>
      <link>http://example.org/posts/lessons-from-greenish-field-project/</link>
      <pubDate>Thu, 21 Jan 2016 15:18:00 +1100</pubDate>
      
      <guid>http://example.org/posts/lessons-from-greenish-field-project/</guid>
      <description>As consultants most of our work involves either PoCs or going into brownfield projects. However, recently I had the opportunity to go into a greenfield project, and below are the lessons I learnt.
Don&amp;rsquo;t over engineer The stack that I was using was pretty standard. Entity Framework + MVC5. However, at the end of the project I found that the architecture that I have created was overly complicated when it need not be.</description>
    </item>
    
    <item>
      <title>The &#34;planning &lt;--&gt; implementation&#34; balance</title>
      <link>http://example.org/posts/the-planning-implementation-balance/</link>
      <pubDate>Fri, 20 Nov 2015 10:27:00 +1100</pubDate>
      
      <guid>http://example.org/posts/the-planning-implementation-balance/</guid>
      <description>One of the great things about Agile is the ability to manage the expectations of stakeholders quite early in the development cycle. Likewise, from a business perspective: one of the great things about Agile is the ability to change requirements late in the development cycle.
When putting together an initial product backlog with estimates and detail. A certain amount of planning is done (whether this software product be a green field project or a slice in an existing project).</description>
    </item>
    
    <item>
      <title>Disaster (security or otherwise) in an agile (scrum) environment</title>
      <link>http://example.org/posts/disaster-security-or-otherwise-in-agile/</link>
      <pubDate>Mon, 31 Aug 2015 14:49:00 +1000</pubDate>
      
      <guid>http://example.org/posts/disaster-security-or-otherwise-in-agile/</guid>
      <description>When a disaster occurs in a system. Be that security, data or accidental the first thing that occurs in the psyche of the whole scrum team is:
Something, unusual has happened. Something different has happened. What do we do? What are the next steps.
The very definition of disaster in the Macquarie Dictionary alludes to this.
disaster
 Pronunciation of disaster /dəˈzastə/ (say duh&amp;rsquo;zahstuh)
noun 1. any unfortunate event, especially a sudden or great misfortune.</description>
    </item>
    
    <item>
      <title>Delete/Redeploy Azure Websites at specific times within a TeamCity and Octopus Deploy CI/CD pipeline</title>
      <link>http://example.org/posts/deleteredeploy-azure-websites-at-comments/</link>
      <pubDate>Fri, 29 May 2015 09:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/deleteredeploy-azure-websites-at-comments/</guid>
      <description>Thanks for sharing, nice post! Casanova là Ji Yeon - Jan 5, 2016
Thanks for sharing, nice post!
Casanova là quán cafe tphcm được thiết kế hoàn toàn theo phong cách độc đáo của nước Ý, đây là quán quán cà phê cổ ở sài gòn không gian cổ điển đẹp hay cách thưởng thức cafe capuchino hay cafe dep o sai gon với không gian tuyệt đẹp hay bạn có biết loi ich ca phe đối với sức khỏe chưa quán cà phê làm việc lý tưởng của freelancer hay quán cafe chụp ảnh đẹp hay đây là cafe con hẻm nhỏ hay đây là quán cafe học nhóm tphcm cực hợp có phòng riêng hay quán cafe tình nhân ở sài gòn hay đây là 1 trong quán cafe lãng mạn sài gòn với đồ uống giá rẻ hay là điểm hẹn cà phê cuối tuần với Casanova Cafe hay meo giup be ngu ngon giúp bé ngủ ngon giấc hay nôi võng giúp bé ngủ ngon.</description>
    </item>
    
    <item>
      <title>Delete/Redeploy Azure Websites at specific times within a TeamCity and Octopus Deploy CI/CD pipeline</title>
      <link>http://example.org/posts/deleteredeploy-azure-websites-at/</link>
      <pubDate>Fri, 29 May 2015 09:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/deleteredeploy-azure-websites-at/</guid>
      <description>Problem Many clients request that specific environments be only available certain times during a day.
This is often due to the high cost associated with keeping environments that are not in use.
The problem here can be divided into two.
1. How do we make the environment unavailable?
2. How do we make the environment available once more?
Microsoft will charge Azure services per compute time. Meaning that even if you stop your Azure Website it will still incur costs.</description>
    </item>
    
    <item>
      <title>PowerShell from SourceTree as a custom action</title>
      <link>http://example.org/posts/powershell-from-sourcetree-as-custom-comments/</link>
      <pubDate>Mon, 04 May 2015 15:08:00 +1000</pubDate>
      
      <guid>http://example.org/posts/powershell-from-sourcetree-as-custom-comments/</guid>
      <description> start powershell -Command &amp;ldquo;start powershell&amp;amp;q&amp;hellip; Roberto - Feb 6, 2016
start powershell -Command &amp;ldquo;start powershell&amp;rdquo;
This command works better: source tree would not hang waiting for you to close the shell </description>
    </item>
    
    <item>
      <title>PowerShell from SourceTree as a custom action</title>
      <link>http://example.org/posts/powershell-from-sourcetree-as-custom/</link>
      <pubDate>Mon, 04 May 2015 15:08:00 +1000</pubDate>
      
      <guid>http://example.org/posts/powershell-from-sourcetree-as-custom/</guid>
      <description>Step 1:
Create a ps.bat file with one line:
start powershell
Save this file in an appropriate location. I saved mine to:
C:\CustomCommands

Step 2:
Add a custom action to SourceTree.
You do this by going to
Tools -&amp;gt; Options -&amp;gt; Custom Actions


Click the &amp;lsquo;Add&amp;rsquo; button and you will get another Window.
On the &amp;lsquo;Menu caption&amp;rsquo; type an identifier for PowerShell and on &amp;lsquo;Script to run&amp;rsquo; navigate to the script you made in step 1 then click &amp;lsquo;OK&amp;rsquo; and exit from the &amp;lsquo;Options&amp;rsquo; Window.</description>
    </item>
    
    <item>
      <title>Create certificate for use with Azure PowerShell cmdlets</title>
      <link>http://example.org/posts/create-certificate-for-use-with-azure-comments/</link>
      <pubDate>Fri, 17 Apr 2015 14:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/create-certificate-for-use-with-azure-comments/</guid>
      <description> The location of makecert for Visual Studio 2013: C&amp;hellip; Rajeev Joseph - Jul 1, 2015
The location of makecert for Visual Studio 2013: C:\Program Files (x86)\Windows Kits\8.1\bin\x64 oh b.t.w. thanks Raph.. helped me out big time :) Rajeev Joseph - Jul 1, 2015
oh b.t.w. thanks Raph.. helped me out big time :) Thanks Raph! Ahmed IG - Jan 1, 2016
Thanks Raph! </description>
    </item>
    
    <item>
      <title>Create certificate for use with Azure PowerShell cmdlets</title>
      <link>http://example.org/posts/create-certificate-for-use-with-azure/</link>
      <pubDate>Fri, 17 Apr 2015 14:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/create-certificate-for-use-with-azure/</guid>
      <description>There are two ways to access your Azure subscription from PowerShell(PS). The first is to use Add-AzureAccount and subsequently be greeted with a login. The other way is to use Set-AzureSubscription and use certificates.
Below is the method of using certificates for more fluid scripts.
 Open visual studio command prompt as an administrator. This is located under your Visual Studio family of applications. 
 run this command (replacing  with a name)</description>
    </item>
    
    <item>
      <title>Azure SDK 2.4 to 2.5 upgrade. Error: &#34;&#39;Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment&#39; exists in both &#39;Microsoft.WindowsAzure.ServiceRuntime.dll&#39; and &#39;Microsoft.WindowsAzure.ServiceRuntime.dll&#34;</title>
      <link>http://example.org/posts/azure-24-to-25-upgrade-error-comments/</link>
      <pubDate>Wed, 11 Mar 2015 09:51:00 +1100</pubDate>
      
      <guid>http://example.org/posts/azure-24-to-25-upgrade-error-comments/</guid>
      <description> You can also fix the problem here Mark Gallaher - Aug 3, 2016
You can also fix the problem here http://fix4dll.com/xinput1_3_dll. I think it&amp;rsquo;s one of the best services for this kind of problems. Check it out. </description>
    </item>
    
    <item>
      <title>Azure SDK 2.4 to 2.5 upgrade. Error: &#34;&#39;Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment&#39; exists in both &#39;Microsoft.WindowsAzure.ServiceRuntime.dll&#39; and &#39;Microsoft.WindowsAzure.ServiceRuntime.dll&#34;</title>
      <link>http://example.org/posts/azure-24-to-25-upgrade-error/</link>
      <pubDate>Wed, 11 Mar 2015 09:51:00 +1100</pubDate>
      
      <guid>http://example.org/posts/azure-24-to-25-upgrade-error/</guid>
      <description>If you&amp;rsquo;re getting this error while calling the type &amp;lsquo;RoleEnvironments&amp;rsquo; then there is probably something wrong with the Visual Studio migration of Azure 2.4 to 2.5.
To fix this issue simply remove then add references to the DLL Microsoft.WindowsAzure.ServiceRuntime.dll to the project that&amp;rsquo;s calling &amp;lsquo;RoleEnvironments&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>JSON serialisation/deserialisation with snake_case naming conventions</title>
      <link>http://example.org/posts/json-serialisationdeserialisation-with-comments/</link>
      <pubDate>Tue, 02 Dec 2014 14:38:00 +1100</pubDate>
      
      <guid>http://example.org/posts/json-serialisationdeserialisation-with-comments/</guid>
      <description>Couple of notes: 1) You should probably instantiat&amp;hellip; Marc O. Alfonso - Dec 5, 2014
Couple of notes:
1) You should probably instantiate a regex object for reuse
2) It seems like a variable like MyLLCName would incorrectly be translated to my_l_l_c_name instead of my_llc_name
3) it seems like a variable like &amp;ldquo;FirstName99&amp;rdquo; would incorrect be translated to first_name_9_9 instead of first_name_99 (for integer separated)
My suggestion is to use:</description>
    </item>
    
    <item>
      <title>JSON serialisation/deserialisation with snake_case naming conventions</title>
      <link>http://example.org/posts/json-serialisationdeserialisation-with/</link>
      <pubDate>Tue, 02 Dec 2014 14:38:00 +1100</pubDate>
      
      <guid>http://example.org/posts/json-serialisationdeserialisation-with/</guid>
      <description>GitHub (NuGet package source)
GitHub (Usage example)
Nuget Package
JSON is quickly becoming the norm for data transfer along the HTTP protocol and for many of us it is a daily task to serialise into and from JSON.
The problem with JSON, however, is the fact that there is no standard associated with its naming conventions. Let me give you an example.
Below is a snipet of JSON from the Twitter API:</description>
    </item>
    
    <item>
      <title>My first couple of weeks at Readify</title>
      <link>http://example.org/posts/my-first-couple-of-weeks-at-readify/</link>
      <pubDate>Mon, 17 Nov 2014 21:27:00 +1100</pubDate>
      
      <guid>http://example.org/posts/my-first-couple-of-weeks-at-readify/</guid>
      <description>So now I&amp;rsquo;ve been at Readify for a few weeks and it has been great. If you gave me a few words to describe Readify I would say:
 Quality Learning Smart Agile  Consulting There is a different dynamic working here for Readify as a consultant. As a consultant, one is not a employee of the business, but rather someone who provides a service. This change of mentality creates a different relationship all together between the developer and the product owner.</description>
    </item>
    
    <item>
      <title>Leaving CSB Engage :(</title>
      <link>http://example.org/posts/leaving-csb-engage/</link>
      <pubDate>Wed, 08 Oct 2014 18:54:00 +1100</pubDate>
      
      <guid>http://example.org/posts/leaving-csb-engage/</guid>
      <description>What a journey it has been!
Whether it be developing SIG using the Facebook and Instagram APIs or managing huge data sets (close to 1 billion). CSB Engage has been a wonderful place to work. It had flexibility and a great culture. The best thing would probably be the Monday lunches. This is where one person from the team would bring lunch from home and we would eat together. I&amp;rsquo;m proud that I&amp;rsquo;ve seen CSB Engage grow from Endless Rewards, to its merger with OnitMedia and I&amp;rsquo;ve been there every step of the way.</description>
    </item>
    
    <item>
      <title>The missing piece in social media (digital) strategy - SIG</title>
      <link>http://example.org/posts/the-missing-piece-in-social-media/</link>
      <pubDate>Tue, 01 Jul 2014 22:05:00 +1000</pubDate>
      
      <guid>http://example.org/posts/the-missing-piece-in-social-media/</guid>
      <description>The new breed of digital marketers are here! They are called &amp;ldquo;Social Media Strategists&amp;rdquo;. Social media strategy involves businesses generating social media actions (likes, tweets, checkins etc) on their own business page (Facebook Fan page, Twitter account or Instagram account). The reason? to ensure that a business page receives adequate attention on the news feed of social media users.
These strategies include devising plans to post rich content that will enable loyal customers to perform social media actions and hence provide a mechanism for customers to tell their friends about a certain company.</description>
    </item>
    
    <item>
      <title>Free Nexus 5 from Google</title>
      <link>http://example.org/posts/free-nexus-5-from-google/</link>
      <pubDate>Tue, 10 Jun 2014 14:31:00 +1000</pubDate>
      
      <guid>http://example.org/posts/free-nexus-5-from-google/</guid>
      <description>I had broken my Samsung Galaxy S2 on my European trip. So as soon as I got back home I started to look for a new phone. I decided that I would just invest in an expensive smart phone and be ultra careful with it (I am not the type of person to care much about the protection of phones&amp;hellip;.or sun glasses)
I purchased a Nexus 5 from the Google play store.</description>
    </item>
    
    <item>
      <title>Front-end development responsibilities as a (back-end) software engineer</title>
      <link>http://example.org/posts/front-end-development-responsiblities-comments/</link>
      <pubDate>Wed, 26 Mar 2014 22:29:00 +1100</pubDate>
      
      <guid>http://example.org/posts/front-end-development-responsiblities-comments/</guid>
      <description> As a front end developer I agree with this. Good b&amp;hellip; Alejandro Magnorsky - Mar 4, 2014
As a front end developer I agree with this. Good back-end development and use of new technologies make the work for the front end developer easier, faster and better. </description>
    </item>
    
    <item>
      <title>Front-end development responsibilities as a (back-end) software engineer</title>
      <link>http://example.org/posts/front-end-development-responsiblities/</link>
      <pubDate>Wed, 26 Mar 2014 22:29:00 +1100</pubDate>
      
      <guid>http://example.org/posts/front-end-development-responsiblities/</guid>
      <description>What seems to be predominant in the industry today is a fixation on a software engineer simply creating (yes creating, maybe we&amp;rsquo;ll discuss the importance of this verb for another blog post) products that solve a specific business problem (or requirement). While this is good from the outset. It raises several questions of the responsibility of a software engineer to begin with.
Before I get into the real content of this blog post, I would like to share with you my current working environment, so you can analyse any predisposed prejudices I may or may not have.</description>
    </item>
    
    <item>
      <title>BFS and DFS with Python</title>
      <link>http://example.org/posts/bfs-and-dfs-with-python/</link>
      <pubDate>Tue, 25 Feb 2014 14:37:00 +1100</pubDate>
      
      <guid>http://example.org/posts/bfs-and-dfs-with-python/</guid>
      <description>GitHub
So I&amp;rsquo;ve found myself in a situation where I have had to revise simple Data Structures from my Software Engineering Degree. I have not done this for several years, so naturally my first step in this process was looking at the workings of various structures on Google (then subsequently Wikipedia). After refreshing my memory, I decided that the best thing to do was code up these algorithm.
In this blog post, I will show you the BFS (breadth first search) and the DFS (depth first search) in Python.</description>
    </item>
    
    <item>
      <title>Instagram API filtering (or querying)</title>
      <link>http://example.org/posts/instagram-api-filtering-comments/</link>
      <pubDate>Fri, 21 Feb 2014 16:53:00 +1100</pubDate>
      
      <guid>http://example.org/posts/instagram-api-filtering-comments/</guid>
      <description> Thanks for sharing Marcel - Feb 1, 2014
Thanks for sharing </description>
    </item>
    
    <item>
      <title>Instagram API filtering (or querying)</title>
      <link>http://example.org/posts/instagram-api-filtering/</link>
      <pubDate>Fri, 21 Feb 2014 16:53:00 +1100</pubDate>
      
      <guid>http://example.org/posts/instagram-api-filtering/</guid>
      <description>GitHub
Instagram&amp;rsquo;s APIs are well written, well documented, RESTfull and simply a breeze to use.
I myself prefer them to the Facebook APIs, however the Facebook Graph API does have an advantage over that of the Instagram API - namely filtering. The question I will answer in this blog post is whether there is an efficient way to filter the Instagram API.
Facebook Situation For example, if I wanted to display information about a user on Facebook, I would query:</description>
    </item>
    
  </channel>
</rss>