<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alm on Raph&#39;s Blog</title>
    <link>http://example.org/tags/alm/</link>
    <description>Recent content in Alm on Raph&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Dec 2017 12:01:00 +1100</lastBuildDate>
    
	<atom:link href="http://example.org/tags/alm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why unit testing is still very relevant</title>
      <link>http://example.org/posts/why-unit-testing-is-still-very-relevant/</link>
      <pubDate>Sat, 23 Dec 2017 12:01:00 +1100</pubDate>
      
      <guid>http://example.org/posts/why-unit-testing-is-still-very-relevant/</guid>
      <description>In this age of in-memory test servers and databases, multi tenancy-first design, and increased performance it&amp;rsquo;s easy to simply dismiss unit testing as a practice of the past. Whilst I myself have increased my dependance on integration testing in new applications that I write. Unit testing still has its place.

 A set of beer-units about to be tested | source: WikiMedia Commons *   [](https://www.blogger.com/null)
In 2017, I&amp;rsquo;ve gave a few talks about testing more and mocking less.</description>
    </item>
    
    <item>
      <title>Context and agile practices</title>
      <link>http://example.org/posts/context-and-agile-practices/</link>
      <pubDate>Fri, 15 Sep 2017 08:36:00 +1000</pubDate>
      
      <guid>http://example.org/posts/context-and-agile-practices/</guid>
      <description>At times we have competing responsibilities - ship code or don&amp;rsquo;t ship it because of a small edge case bug; put pressure on our team or make the business happy; coach our friends or write code.
This is a normal part of our everyday professional lives, and it&amp;rsquo;s important to strike a balance that will help us in the future, but also deliver in the short-term.
One of the hardest things to balance is when to modify our delivery practices to satisfy certain team members, when we know the changes have been harmful in past projects.</description>
    </item>
    
    <item>
      <title>Lessons from a greenish-field project</title>
      <link>http://example.org/posts/lessons-from-greenish-field-project/</link>
      <pubDate>Thu, 21 Jan 2016 15:18:00 +1100</pubDate>
      
      <guid>http://example.org/posts/lessons-from-greenish-field-project/</guid>
      <description>As consultants most of our work involves either PoCs or going into brownfield projects. However, recently I had the opportunity to go into a greenfield project, and below are the lessons I learnt.
Don&amp;rsquo;t over engineer The stack that I was using was pretty standard. Entity Framework + MVC5. However, at the end of the project I found that the architecture that I have created was overly complicated when it need not be.</description>
    </item>
    
    <item>
      <title>Create certificate for use with Azure PowerShell cmdlets</title>
      <link>http://example.org/posts/create-certificate-for-use-with-azure-comments/</link>
      <pubDate>Fri, 17 Apr 2015 14:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/create-certificate-for-use-with-azure-comments/</guid>
      <description> The location of makecert for Visual Studio 2013: C&amp;hellip; Rajeev Joseph - Jul 1, 2015
The location of makecert for Visual Studio 2013: C:\Program Files (x86)\Windows Kits\8.1\bin\x64 oh b.t.w. thanks Raph.. helped me out big time :) Rajeev Joseph - Jul 1, 2015
oh b.t.w. thanks Raph.. helped me out big time :) Thanks Raph! Ahmed IG - Jan 1, 2016
Thanks Raph! </description>
    </item>
    
    <item>
      <title>Create certificate for use with Azure PowerShell cmdlets</title>
      <link>http://example.org/posts/create-certificate-for-use-with-azure/</link>
      <pubDate>Fri, 17 Apr 2015 14:53:00 +1000</pubDate>
      
      <guid>http://example.org/posts/create-certificate-for-use-with-azure/</guid>
      <description>There are two ways to access your Azure subscription from PowerShell(PS). The first is to use Add-AzureAccount and subsequently be greeted with a login. The other way is to use Set-AzureSubscription and use certificates.
Below is the method of using certificates for more fluid scripts.
 Open visual studio command prompt as an administrator. This is located under your Visual Studio family of applications. 
 run this command (replacing  with a name)</description>
    </item>
    
  </channel>
</rss>