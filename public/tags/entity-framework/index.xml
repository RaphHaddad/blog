<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Entity Framework on Raph&#39;s Blog</title>
    <link>http://example.org/tags/entity-framework/</link>
    <description>Recent content in Entity Framework on Raph&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Jan 2016 15:18:00 +1100</lastBuildDate>
    
	<atom:link href="http://example.org/tags/entity-framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lessons from a greenish-field project</title>
      <link>http://example.org/posts/lessons-from-greenish-field-project/</link>
      <pubDate>Thu, 21 Jan 2016 15:18:00 +1100</pubDate>
      
      <guid>http://example.org/posts/lessons-from-greenish-field-project/</guid>
      <description>As consultants most of our work involves either PoCs or going into brownfield projects. However, recently I had the opportunity to go into a greenfield project, and below are the lessons I learnt.
Don&amp;rsquo;t over engineer The stack that I was using was pretty standard. Entity Framework + MVC5. However, at the end of the project I found that the architecture that I have created was overly complicated when it need not be.</description>
    </item>
    
  </channel>
</rss>