<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Raph&#39;s Blog</title>
    <link>http://example.org/tags/python/</link>
    <description>Recent content in Python on Raph&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Feb 2014 14:37:00 +1100</lastBuildDate>
    
	<atom:link href="http://example.org/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BFS and DFS with Python</title>
      <link>http://example.org/posts/bfs-and-dfs-with-python/</link>
      <pubDate>Tue, 25 Feb 2014 14:37:00 +1100</pubDate>
      
      <guid>http://example.org/posts/bfs-and-dfs-with-python/</guid>
      <description>GitHub
So I&amp;rsquo;ve found myself in a situation where I have had to revise simple Data Structures from my Software Engineering Degree. I have not done this for several years, so naturally my first step in this process was looking at the workings of various structures on Google (then subsequently Wikipedia). After refreshing my memory, I decided that the best thing to do was code up these algorithm.
In this blog post, I will show you the BFS (breadth first search) and the DFS (depth first search) in Python.</description>
    </item>
    
    <item>
      <title>Instagram API filtering (or querying)</title>
      <link>http://example.org/posts/instagram-api-filtering-comments/</link>
      <pubDate>Fri, 21 Feb 2014 16:53:00 +1100</pubDate>
      
      <guid>http://example.org/posts/instagram-api-filtering-comments/</guid>
      <description> Thanks for sharing Marcel - Feb 1, 2014
Thanks for sharing </description>
    </item>
    
    <item>
      <title>Instagram API filtering (or querying)</title>
      <link>http://example.org/posts/instagram-api-filtering/</link>
      <pubDate>Fri, 21 Feb 2014 16:53:00 +1100</pubDate>
      
      <guid>http://example.org/posts/instagram-api-filtering/</guid>
      <description>GitHub
Instagram&amp;rsquo;s APIs are well written, well documented, RESTfull and simply a breeze to use.
I myself prefer them to the Facebook APIs, however the Facebook Graph API does have an advantage over that of the Instagram API - namely filtering. The question I will answer in this blog post is whether there is an efficient way to filter the Instagram API.
Facebook Situation For example, if I wanted to display information about a user on Facebook, I would query:</description>
    </item>
    
  </channel>
</rss>